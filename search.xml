<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>maden_file</title>
      <link href="/joaden/2020/09/17/maden-file/"/>
      <url>/joaden/2020/09/17/maden-file/</url>
      
        <content type="html"><![CDATA[<p>“香雾云鬟湿，清辉玉臂寒。”这是描绘妻子的美丽，“香雾”、“云鬟”、“玉臂”，用了这样的词语来形容，这是真爱无疑了！<br>“昼引老妻乘小艇，晴看稚子浴清江。”竟然和妻子划着小船，悠哉悠哉的看风景，而不管孩子们在河里玩，这太让人羡慕了。</p><p>“老妻书数纸，应悉未归情。”在外的人最想家，看着妻子的信，怎能不伤感，如此牵肠挂肚，定是恩爱夫妻。“老妻画纸为棋局，<br>稚子敲针作钓钩。”能和自己的妻子没事的时候下下棋，陪着自己的孩子去钓钓鱼，这是多么温馨的画面。这些赤裸裸秀恩爱的诗<br>句简直数不胜数。</p><p>最直白，最有代表性的当属这首《月夜》:</p><p>今夜鄜州月，闺中只独看。 遥怜小儿女，未解忆长安。 香雾云鬟湿，清辉玉臂寒。 何时倚虚幌，双照泪痕干。</p><p>本该是花好月圆、人间圆满之时，怎奈两地相隔。不禁思念起妻子和孩子，看着月亮想着远方的家，也许此时的妻子也正在想着他，<br>彼此思念吧！</p><p> 先看看这首《月夜》:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 今夜鄜州月，闺中只独看。<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 遥怜小儿女，未解忆长安。<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 香雾云鬟湿，清辉玉臂寒。<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 何时倚虚幌，双照泪痕干。<br>&nbsp; &nbsp; &nbsp; &nbsp; 杜甫在安史之乱后，把妻儿安顿在鄜州，自己去投奔唐肃宗，结果路上被俘抓回了长安。估计在一个月圆之夜，<br>他又开始想念他的爱妻和儿女，写下了这么一首情意绵绵的思念之诗。</p><p>&nbsp; &nbsp; &nbsp; &nbsp; “今夜鄜州月，闺中只独看”，这个“独”字，说明杜甫之前和他太太一起欣赏过夜色中的月亮，现在他们两个只能<br>分隔两地，各自抬头望着天上的月亮各自思念。能和自己的太太某年某月某日，在月光如水的夜晚一同抬头赏月，这花前月<br>下的场景有着浓浓的荷尔蒙味道。</p><p>&nbsp; &nbsp; &nbsp; “香雾云鬟湿，清辉玉臂寒。”他眼里的妻子是有多美？“香雾”、“云鬟”、“玉臂”，用了这样的词语来形容她，作为妻<br>子该是如何自豪啊！</p><p>&nbsp; &nbsp; &nbsp; 其实杜甫大多数情况下写他妻子都是用“老妻”或者“丑妻”来代指。</p><p>&nbsp; &nbsp; &nbsp; “老妻画纸为棋局，稚子敲针作钓钩。”能和自己的妻子没事的时候下下棋，陪着自己的孩子去钓钓鱼，这是多么温馨<br>的画面。</p><p>&nbsp; &nbsp; &nbsp; “昼引老妻乘小艇，晴看稚子浴清江。”和自己的妻子划着小船，悠哉悠哉的出行观赏风景，而儿女们在河水里嬉笑<br>打闹，这幅<br>图画让人为之动容。</p><p>&nbsp; &nbsp; &nbsp; &nbsp; “老妻书数纸，应悉未归情。”当杜甫客落他乡，夜晚辗转难眠之时，老妻催归的信，使诗人更陷入了欲归不能的<br>焦灼之中。这里也能看出杜甫夫妇的恩爱之情。如果他们没有如此恩爱，何必催归呢？如果不爱，你在外面好了，何必归来呢？</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 在诸多古代诗人的文字中，很少能够读到这么多关于对自己妻子儿女的记述。那些写悼亡词的，像苏轼“十年生死<br>两茫茫，不思量，自难忘。”贺铸“空床卧听南窗雨，谁复挑灯夜补衣。”虽然戚戚婉婉，觉得对亡人情深意长，但总觉得不如<br>杜甫这样直白的表达自己爱妻子，爱儿女，爱家庭的真情实意。在古代，杜甫应该算是一个宠妻狂魔了吧！</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 当然，每个人表达感情的方式不一样，这个没有定论说非要如何做才行。但是杜甫做了一个不错的榜样，所以在此<br>表扬一下!</p><p>苏轼写给妻子的诗词中，最为有名的便是写给发妻王弗的《江城子·记梦》。“十年生死两茫茫，不思量，自难忘”，可谓赚足了读者的眼泪。</p><p>《南乡子·有感》</p><p>　　冰雪透香肌，姑射仙人不似伊。</p><p>　　濯锦江头新样锦，非宜，故著寻常淡薄衣。</p><p>　　暖日下重帏，春睡香凝索起迟。</p><p>　　曼倩风流缘底事，当时，爱被西真唤作儿。</p><p>　　词的开篇两句“冰雪透香肌，姑射仙人不似伊”，苏轼便盛赞了妻子的美貌。意思是说，在苏轼眼中，爱妻王闰之的肌肤，就像冰雪一样洁白细嫩，而且散发着微微香气，就连神话中姑射山中的神女也比不上苏轼的爱妻。这两句主要是以典故来表达苏轼对王闰之的钟爱。典出《庄子·逍遥游》：“藐姑射之山，有神人居焉，肌肤若冰雪，绰约若处子”。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sencend</title>
      <link href="/joaden/2020/09/16/sencend/"/>
      <url>/joaden/2020/09/16/sencend/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mynew</title>
      <link href="/joaden/2020/09/16/mynew/"/>
      <url>/joaden/2020/09/16/mynew/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>初始英伟达开发板 jetson-nano</title>
      <link href="/joaden/2020/09/15/1-0-learn-nano/"/>
      <url>/joaden/2020/09/15/1-0-learn-nano/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-初识NANO板卡"><a href="#第一章-初识NANO板卡" class="headerlink" title="第一章 初识NANO板卡"></a>第一章 初识NANO板卡</h1><p>    NVIDIA 最新推出的Jetson Nano Developer<br>Kit能满足你对AI的所有想象，跟着它走进AI世界，享受AI带来的无限乐趣。无论你是专业人员、研究人员还是爱好者和学生，<br>Jetson Nano让每个人都能使用人工智能。Jetson Nano开发套件是一款功能强大的小型人工智能计算机，只需插入带有系统<br>映像的microSD卡即可启动，内置SOC系统级芯片，可并行运行多个神经网络，比如TensorFlow、PyTorch、Caffe/Caffe2、Keras、MXNet等，这些神经网络可用于实现图像分类、目标检测、语音分割和智能分析等能力，可用于构建自主机器人<br>和复杂人工智能系统。</p><h3 id="一、-英伟达Jetson-Nano-是什么"><a href="#一、-英伟达Jetson-Nano-是什么" class="headerlink" title="一、 英伟达Jetson Nano 是什么"></a>一、 英伟达Jetson Nano 是什么</h3><p>    Nvidia Jetson Nano开发工具包是一款功能强大的嵌入式应用AI计算设备。它包括一个集成的128核Maxwell GPU，四核ARM A57 64位CPU, 4GB LPDDR4内存，以及对MIPI CSI-2和PCIe Gen2高速I/O的支持。<br>这款袖珍电脑非常省电(5-10W的功耗)，但它提供了并行运行多个现代人工智能模型的高性能计算能力。它具有472 GFLOPS的计算性能。Jetson家族就是被设计成一个“AI on The edge”的平台——一种人工智能算法在设备上本地处理的解决方案。<br> Jetson Nano是由最新发布的JetPack 4.2 SDK支持的，该软件包括:</p><ol><li>使用Nvidia驱动程序完成桌面Linux环境(Ubuntu 18.04);</li><li>库和api，例如:</li></ol><p>-CUDA工具包;<br>-cuDNN - CUDA深度神经网络库;<br>-TensorRT-用于图像分类、分割和目标检测神经网络的深度学习推理运行时;</p><ul><li>VisionWorks -计算机视觉和图像处理软件开发包;</li></ul><ol start="3"><li>多媒体API;</li><li>开发工具- Nsight Eclipse Edition，调试和分析工具;</li><li>文档和示例代码。</li></ol><p>    那么其他流行的机器学习库和框架，如PyTorch、TensorFlow、Keras、Caffe或OpenCV，又如何呢?它们不是默认提供的，但是可以轻松安装!而且它们完全兼容发布的开发板。</p><p>    Jetson Nano非常适合作为Edge AI设备，它允许用户在Edge上执行机器学习/深度学习。与体积小、内存容量大、选项多和灵活性相比，Nvidia的开发工具包具有可靠的计算机性能，这使其成为一种具有无限可能性的设备。</p><h3 id="二、-为什么要用NVIDIA-DIGITS"><a href="#二、-为什么要用NVIDIA-DIGITS" class="headerlink" title="二、 为什么要用NVIDIA DIGITS"></a>二、 为什么要用NVIDIA DIGITS</h3><p>    英伟达通过提供一套深度学习工具来分享他们多年来积累的经验。其中之一是DIGITS (Deep Learning GPU Training System™)，它支持多种任务:</p><ol><li>-管理数据集;</li><li>-设计和训练高精度的深度神经网络用于图像分类、分割、目标检测等任务;</li><li>-监测模型的性能;</li><li>-验证和可视化结果;</li><li>-为部署选择最佳模型。</li></ol><p>    深度学习GPU培训系统是完全互动的-一切都可以通过一个直观的基于浏览器的界面。结合英伟达DIGITS和Jetson形成一个有效的管道，开发和部署先进的神经网络的任何应用程序。</p><h3 id="三、-我们可以在Jetson-Nano上运行什么样的算法"><a href="#三、-我们可以在Jetson-Nano上运行什么样的算法" class="headerlink" title="三、 我们可以在Jetson Nano上运行什么样的算法?"></a>三、 我们可以在Jetson Nano上运行什么样的算法?</h3><p>    与谷歌Coral Dev Board相比，Jetson Nano支持大量流行的机器学习/深度学习库和框架，如Keras、TensorFlow、Caffe、Torch/PyTorch等。对如此多库的支持使该设备功能强大——它可以用于设计、实现和执行来自计算机视觉、自然语言或表格数据结构处理等领域的操作。具体来说，英伟达的Jetson Nano可以运行如下算法:</p><ol><li>-分类;</li><li>-目标检测;</li><li>-对象跟踪;</li><li>-分割;</li><li>-姿态和运动估计;</li><li>-特征跟踪;</li><li>-视频增强(视频稳定)等。</li></ol><p>    这些算法中的许多都可以实时处理，这意味着它们可以从产线上的摄像机分析高分辨率的视频流。你甚至可以使用英伟达的Jetson Nano实时分析来自物联网设备的声音或数据。开发人员工具包的这些功能可以一起或单独用于构建复杂的人工智能系统，此外，还可以用于许多业务和工业应用程序。</p><h3 id="四、英伟达-NANO板卡配置参数"><a href="#四、英伟达-NANO板卡配置参数" class="headerlink" title="四、英伟达 NANO板卡配置参数"></a>四、英伟达 NANO板卡配置参数</h3><p>    开发板上丰富的外围接口，使得开发人员可以轻松连接不同的传感器，以支持各种人工智能应用程序及AI项目的快速搭建。</p><img src="/joaden/2020/09/15/1-0-learn-nano/nano.jpg" class="" title="nano"><ol><li>GPU：NVIDIA MaxwellTM架构，配备128个NVIDIA CUDA核心</li><li>CPU：四核ARM® Cortex®-A57 MP Core处理器</li><li>内存：4GB 64位 LPDDR4</li><li>存储空间：16GB eMMC 5.1闪存</li><li>视频编码：4K @30（H.264/H.265）</li><li>视频解码：4K @60（H.264/H.265）</li><li>摄像头：12通道（3x4或4x2） MIPI CSI-2 DPHY 1.1（1.5Gbps）</li><li>连接：千兆以太网</li><li>显示器：HDMI 2.0或DP1.2 |eDP 1.4|DSI（1x2） 2同步</li><li>UPHY：1x1/2/4 PCIE、1xUSB3.0、3xUSB2.0</li><li>I/O：1xSDIO/2xSPI/6xI2C/2xI2S/GPIO</li><li>尺寸：100 mm x 80 mm x 29 mm </li></ol><h3 id="五、NANO板卡运行"><a href="#五、NANO板卡运行" class="headerlink" title="五、NANO板卡运行"></a>五、NANO板卡运行</h3><p>nano板卡入门指南： <a href="https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#intro">https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#intro</a><br>    根据官方提供的SD卡格式化软件和烧录软件，进行格式化和烧录。</p><h5 id="2-1格式化用到SD-Card-Formatter-exe"><a href="#2-1格式化用到SD-Card-Formatter-exe" class="headerlink" title="2.1格式化用到SD Card Formatter.exe"></a>2.1格式化用到SD Card Formatter.exe</h5><img src="/joaden/2020/09/15/1-0-learn-nano/SD_Card_Formatter.png" class="" title="sdcard"><h5 id="2-2烧录镜像用到etcher-exe"><a href="#2-2烧录镜像用到etcher-exe" class="headerlink" title="2.2烧录镜像用到etcher.exe"></a>2.2烧录镜像用到etcher.exe</h5><img src="/joaden/2020/09/15/1-0-learn-nano/etcher.png" class="" title="etcher"><h3 id="六、NANO-更新系统-（谨慎：很多案例指定版本，不要轻易升级）"><a href="#六、NANO-更新系统-（谨慎：很多案例指定版本，不要轻易升级）" class="headerlink" title="六、NANO 更新系统 （谨慎：很多案例指定版本，不要轻易升级）"></a>六、NANO 更新系统 （谨慎：很多案例指定版本，不要轻易升级）</h3><p>源替换，加速更新，先拷贝一份，备份，删除所有的原有源，替换成下方的新源</p><pre><code>sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak    #为防止误操作后无法恢复，先备份原文件sources.listsudo gedit /etc/apt/sources.list  </code></pre><p>好用的源，下载速度是原有的百倍。</p><pre><code>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universedeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universedeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universedeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universedeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main multiverse restricted universedeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main multiverse restricted universedeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main multiverse restricted universedeb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main multiverse restricted universe</code></pre><p>更新系统~(根据需要更新，如果因为自身项目的版本限制，最好不要轻易升级)</p><pre><code>sudo apt-get updatesudo apt-get full-upgrade</code></pre><h3 id="七、NANO-安装软件和配置（仅安装自己需要的）"><a href="#七、NANO-安装软件和配置（仅安装自己需要的）" class="headerlink" title="七、NANO 安装软件和配置（仅安装自己需要的）"></a>七、NANO 安装软件和配置（仅安装自己需要的）</h3><p>    Jetson-nano的OS镜像已经自带了JetPack，cuda，cudnn，opencv等都已经安装好，并有例子，这些例子安装路径如下所示</p><table><thead><tr><th>库名称</th><th align="center">版本</th><th align="left">路径</th></tr></thead><tbody><tr><td>TensorRT</td><td align="center">根据自身情况</td><td align="left">/usr/src/tensorrt/samples/</td></tr><tr><td>CUDA</td><td align="center">根据自身情况</td><td align="left">/usr/local/cuda-/samples/</td></tr><tr><td>cuDNN</td><td align="center">根据自身情况</td><td align="left">/usr/src/cudnn_samples_v7/</td></tr><tr><td>Multimedia API</td><td align="center">根据自身情况</td><td align="left">/usr/src/tegra_multimedia_api/</td></tr><tr><td>VisionWorks</td><td align="center">根据自身情况</td><td align="left">/usr/share/visionworks/sources/samples/ /usr/share/visionworks-tracking/sources/samples/ /usr/share/visionworks-sfm/sources/samples/</td></tr><tr><td>OpenCV</td><td align="center">根据自身情况</td><td align="left">/usr/share/OpenCV/samples/</td></tr></tbody></table><p>（1） 检查CUDA</p><p>Jetson-nano中已经安装了CUDA10.0版本，但是此时你如果运行 nvcc -V是不会成功的，需要你把CUDA的路径写入环境变量中。OS中自带Vim工具 ，所以运行下面的命令编辑环境变量 <code>sudo vim  ~/.bashrc</code><br>在最后添加： 注意自己的版本信息进行调整修改参数</p><pre><code>export CUDA_HOME=/usr/local/cuda-10.0.xxxxxxxexport LD_LIBRARY_PATH=/usr/local/cuda-10.0.xxxxxxxx/lib64:$LD_LIBRARY_PATHexport PATH=/usr/local/cuda-10.0.xxxxx/bin:$PATH</code></pre><p>执行命令<code>source ~/.bashrc</code><br>用命令检查结果<code>nvcc -V</code></p><p>（2）检查OpenCV<br>Jetson-nano中已经安装了OpenCV3.3版本，可以使用命令检查OpenCV是否安装就绪，如果OpenCv安装就绪，会显示版本号</p><p><code>pkg-config opencv --modversion</code></p><p>（3）检查cuDNN<br>Jetson-nano中已经安装好了cuDNN，并有例子可供运行，我们运行一下例子，也正好验证上面的CUDA</p><pre><code>#进入例子目录cd /usr/src/cudnn_samples_v7/mnistCUDNN  #编译一下例子 sudo make     为可执行文件添加执行权限sudo chmod a+x mnistCUDNN #  # 执行./mnistCUDNN</code></pre><p>成功则如下显示：</p><pre><code>beckhans@Jetson:/usr/src/cudnn_samples_v7/mnistCUDNN$ ./mnistCUDNNcudnnGetVersion() : 7301 , CUDNN_VERSION from cudnn.h : 7301 (7.3.1)Host compiler version : GCC 7.3.0There are 1 CUDA capable devices on your machine :device 0 : sms  1  Capabilities 5.3, SmClock 921.6 Mhz, MemSize (Mb) 3964, MemClock 12.8 Mhz, Ecc=0, boardGroupID=0Using device 0Testing single precisionLoading image data/one_28x28.pgmPerforming forward propagation ...Testing cudnnGetConvolutionForwardAlgorithm ...Fastest algorithm is Algo 1Testing cudnnFindConvolutionForwardAlgorithm ...^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.325104 time requiring 3464 memory^^^^ CUDNN_STATUS_SUCCESS for Algo 0: 0.387500 time requiring 0 memory^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.540729 time requiring 57600 memory^^^^ CUDNN_STATUS_SUCCESS for Algo 4: 4.965156 time requiring 207360 memory^^^^ CUDNN_STATUS_SUCCESS for Algo 7: 5.201146 time requiring 2057744 memoryResulting weights from Softmax:0.0000000 0.9999399 0.0000000 0.0000000 0.0000561 0.0000000 0.0000012 0.0000017 0.0000010 0.0000000 Loading image data/three_28x28.pgmPerforming forward propagation ...Resulting weights from Softmax:0.0000000 0.0000000 0.0000000 0.9999288 0.0000000 0.0000711 0.0000000 0.0000000 0.0000000 0.0000000 Loading image data/five_28x28.pgmPerforming forward propagation ...Resulting weights from Softmax:0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 0.9999820 0.0000154 0.0000000 0.0000012 0.0000006 Result of classification: 1 3 5Test passed!Testing half precision (math in single precision)Loading image data/one_28x28.pgmPerforming forward propagation ...Testing cudnnGetConvolutionForwardAlgorithm ...Fastest algorithm is Algo 1Testing cudnnFindConvolutionForwardAlgorithm ...^^^^ CUDNN_STATUS_SUCCESS for Algo 0: 0.113750 time requiring 0 memory^^^^ CUDNN_STATUS_SUCCESS for Algo 1: 0.119792 time requiring 3464 memory^^^^ CUDNN_STATUS_SUCCESS for Algo 2: 0.236198 time requiring 28800 memory^^^^ CUDNN_STATUS_SUCCESS for Algo 4: 1.031719 time requiring 207360 memory^^^^ CUDNN_STATUS_SUCCESS for Algo 5: 5.049948 time requiring 203008 memoryResulting weights from Softmax:0.0000001 1.0000000 0.0000001 0.0000000 0.0000563 0.0000001 0.0000012 0.0000017 0.0000010 0.0000001 Loading image data/three_28x28.pgmPerforming forward propagation ...Resulting weights from Softmax:0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000714 0.0000000 0.0000000 0.0000000 0.0000000 Loading image data/five_28x28.pgmPerforming forward propagation ...Resulting weights from Softmax:0.0000000 0.0000008 0.0000000 0.0000002 0.0000000 1.0000000 0.0000154 0.0000000 0.0000012 0.0000006 Result of classification: 1 3 5Test passed!</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> jetson-nano </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jetson-nano </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
